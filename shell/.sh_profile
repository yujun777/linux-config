#export TERM=xterm-color 
#export LANG=zh_CN.GBK
export UNIX_PRO_PATH=$HOME/git/unix_program/common
export LD_LIBRARY_PATH=$UNIX_PRO_PATH
export PATH=$PATH:$HOME/bin
export LDFLAGS="-L/usr/local/opt/openssl@1.1/lib"
export CPPFLAGS="-I/usr/local/opt/openssl@1.1/include"
export CPLUS_INCLUDE_PATH=/usr/local/opt/openssl/include
export CPATH=/usr/local/opt/openssl/include
export LIBRARY_PATH=/usr/local/opt/openssl/lib

#export C_INCLUDE_PATH=~/usr/include:$C_INCLUDE_PATH
#export CPLUS_INCLUDE_PATH=~/usr/include:$CPLUS_INCLUDE_PATH 
#alias ls='ls -G'
#alias ll='ls -l'
alias ..="cd .."
alias ...="cd ../.."
alias agi='ag --ignore "*test*"'

#文件查找
function fgsub() { find . -name "*.lua" -exec grep -rl "$1" {} \; | xargs sed -i.bak "s/$1/$2/g" ; }
function subptr() { find . \( -name "*.h" -o -name "*.cc" -o -name "*.cpp" \) -exec grep -rl "unique_ptr" {} \; | xargs sed -i.bak "s/std::unique_ptr<\([^*]*\)>/\1\*/g" ; }
function vman() { man $* | col -b | vim -c 'set ft=man nomod nolist' -; }

rockmqdir="$HOME/source/rocketmq/distribution/target/apache-rocketmq"

function start-namesvr() {
	cd $rockmqdir
	nohup sh bin/mqnamesrv &
	cd - > /dev/null 2>&1 ;
}

function stop-namesvr() {
	cd $rockmqdir
	sh bin/mqshutdown namesrv
	cd - > /dev/null 2>&1 ;
}

function start-broker() {
	cd $rockmqdir
	nohup sh bin/mqbroker -n localhost:9876 &
	cd - > /dev/null 2>&1 ;
}

function stop-broker() {
	cd $rockmqdir
	sh bin/mqshutdown broker
	cd - > /dev/null 2>&1 ;
}

function restart-rockmq() {
	stop-broker
	sleep 5
	stop-namesvr
	sleep 5
	rm -rf $HOME/logs
	rm -rf $HOME/store
	sleep 5
	start-namesvr
	sleep 5
	start-broker
}

function rm-rocketmq-cpp-log () {
    rm -rf $HOME/logs/rocketmq-cpp/
}

alias ccat='colorize'
#alias man='vman'

if [ `uname -s` = "Darwin" ]; then
	export CLICOLOR=1
	export LSCOLORS=gxfxaxdxcxegedabagacad
	export PYTHONSTARTUP=~/.pythonstartup.py
	alias -s pdf="open '/Applications/Foxit Reader.app/'"

	export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles
fi 

export PATH="$HOME/.cargo/bin:$PATH"
export GOPATH=$HOME/go

# TMUX
if which tmux >/dev/null 2>&1; then
	# if no session is started, start a new session
	test -z ${TMUX} && tmux

	# when quitting tmux, try to attach
	while test -z ${TMUX}; do
		tmux attach || break
	done
fi
